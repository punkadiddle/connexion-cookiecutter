# ----------------------------------------------------------------------------
# app configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
# ----------------------------------------------------------------------------
[DEFAULT]
STARTUP_VERBOSE = 0

# http://flask.pocoo.org/docs/0.12/config/
flask.DEBUG = true
flask.LOGGER_NAME = {{cookiecutter.project_slug}}
flask.SECRET_KEY = testing/{{cookiecutter.project_slug}}
flask.DEBUG_TB_INTERCEPT_REDIRECTS = false
{% if cookiecutter.use_sql.startswith('y') %}
# Lokale Abhängigkeiten für mysqlclient:
# apt install mysql-server mysql-client libmysqlclient-dev
# 
# CREATE DATABASE {{cookiecutter.project_slug}};
# CREATE USER '{{cookiecutter.project_slug}}'@'localhost' IDENTIFIED BY '{{cookiecutter.project_slug}}';
# GRANT ALL PRIVILEGES ON {{cookiecutter.project_slug}}.* TO '{{cookiecutter.project_slug}}'@'localhost';
flask.SQLALCHEMY_DATABASE_URI = mysql+mysqldb://{{cookiecutter.project_slug}}:{{cookiecutter.project_slug}}@localhost:3306/{{cookiecutter.project_slug}}
flask.SQLALCHEMY_MIGRATE_REPO = migrate_repository
{% endif %}

[app:main]
use = egg:{{cookiecutter.project_slug}}

# ----------------------------------------------------------------------------
# wsgi server configuration
# ----------------------------------------------------------------------------
[server:main]
use = egg:gunicorn#main
bind = :{{cookiecutter.api_port}}
#bind = unix:/var/run/app.sock
#pidfile = /var/run/{{cookiecutter.project_slug}}.pid
preload = true
reload = true
workers = 1
loglevel = info

# ----------------------------------------------------------------------------
# logging configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
# ----------------------------------------------------------------------------
[loggers]
keys = root, flask, connexion, sqlalchemy.engine.base.Engine, thisapp

[handlers]
keys = stdout, stderr

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = stdout, stderr

[logger_thisapp]
level = DEBUG
handlers =
qualname = {{cookiecutter.project_slug}}

[logger_connexion]
level = INFO
handlers =
qualname = connexion

[logger_flask]
level = INFO
handlers =
qualname = flask

[logger_sqlalchemy.engine.base.Engine]
level = INFO
handlers =
qualname = sqlalchemy.engine.base.Engine

[handler_stdout]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[handler_stderr]
class = StreamHandler
args = (sys.stderr,)
level = WARNING
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s
